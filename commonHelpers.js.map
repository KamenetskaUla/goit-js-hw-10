{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nconst btnStart = document.querySelector('[data-start]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst daysSpan = document.querySelector('[data-days]');\nconst input = document.querySelector('#datetime-picker');\nbtnStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] <= new Date()) {\n      iziToast.warning({\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n      });\n      btnStart.disabled = true;\n    } else {\n      btnStart.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbtnStart.addEventListener('click', onStartTimer);\nfunction onStartTimer() {\n  input.disabled = true;\n  btnStart.disabled = true;\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n    const date = convertMs(diff);\n    secondsSpan.textContent = pad(date.seconds);\n    minutesSpan.textContent = pad(date.minutes);\n    hoursSpan.textContent = pad(date.hours);\n    daysSpan.textContent = pad(date.days);\n\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","btnStart","secondsSpan","minutesSpan","hoursSpan","daysSpan","input","options","selectedDates","iziToast","flatpickr","onStartTimer","intervalId","diff","date","convertMs","pad","ms","days","hours","minutes","seconds","value"],"mappings":"+IAQA,IAAIA,EAAmB,KACvB,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACvDL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,EACDR,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBD,EAAmBQ,EAAc,CAAC,EAErC,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErCN,EAAS,iBAAiB,QAASU,CAAY,EAC/C,SAASA,GAAe,CACtBL,EAAM,SAAW,GACjBL,EAAS,SAAW,GACpB,MAAMW,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOb,EAAmB,IAAI,KAC9Bc,EAAOC,EAAUF,CAAI,EAC3BX,EAAY,YAAcc,EAAIF,EAAK,OAAO,EAC1CX,EAAY,YAAca,EAAIF,EAAK,OAAO,EAC1CV,EAAU,YAAcY,EAAIF,EAAK,KAAK,EACtCT,EAAS,YAAcW,EAAIF,EAAK,IAAI,EAEhCD,EAAO,MACT,cAAcD,CAAU,EACxBN,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAEA,SAASS,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASL,EAAIM,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}